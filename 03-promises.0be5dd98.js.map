{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAOC,SAASC,MAAM,GACtBC,EAAUH,EAAKI,SAASC,MACxBC,EAASN,EAAKI,SAASG,KACvBC,EAAWR,EAAKI,SAASK,OAe/B,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAAAC,GACjB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFD,EAAQK,QAAQC,IAAK,kBAItBd,MAvBPL,EAAKoB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAMX,EAAWL,EAAOiB,MAClBlB,EAAQF,EAAQoB,MAChBd,EAASD,EAASe,MAExBL,QAAQC,IAAI,YAAgCK,OAApBb,EAAS,aAA4Ba,OAAjBnB,EAAM,aAAkBmB,OAAPf,IAE7DC,EAAcC,EAAUN,MAiB1BK,IACGe,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUN,EAAKqB,EAALrB,MACjBa,QAAQC,IAAI,uBAAwCK,OAAfb,EAAS,QAAYa,OAANnB,EAAM,UAE3DsB,OAAM,SAAAD,G,IAAGf,EAAQe,EAARf,SAAUN,EAAKqB,EAALrB,MAClBa,QAAQC,IAAI,sBAAqCK,OAAfb,EAAS,QAAYa,OAANnB,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.forms[0];\nconst delayEl = form.elements.delay;\nconst stepEl = form.elements.step;\nconst amountEl = form.elements.amount;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const position = stepEl.value;\n  const delay = delayEl.value;\n  const amount = amountEl.value;\n\n  console.log(`position ${position}, delay: ${delay}, amount ${amount}`);\n\n  createPromise(position, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise(resolve => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(console.log(`✅ Fulfilled`));\n      } else {\n        position;\n      }\n    }, delay);\n  });\n}\n\ncreatePromise()\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// const makeOrder = dish => {\n//   const DELAY = 1000;\n\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve(`here your dish`);\n//       }\n//       reject(`sorry, we have no burgers`);\n//     }, DELAY);\n//   });\n// };\n\n// const p = makeOrder(`burger`);\n\n// p.then(onMakeOrderSuccess).catch(onMakeorderError);\n\n// function onMakeOrderSuccess(result) {\n//   console.log(`onMakeOrderSuccess`);\n//   console.log(result);\n// }\n\n// function onMakeorderError(error) {\n//   console.log(`onMakeorderError`);\n//   console.log(error);\n// }\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","forms","$ce04d3a99e08e73b$var$delayEl","elements","delay","$ce04d3a99e08e73b$var$stepEl","step","$ce04d3a99e08e73b$var$amountEl","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","shouldResolve","Math","random","setTimeout","console","log","addEventListener","evt","preventDefault","value","concat","then","param","catch"],"version":3,"file":"03-promises.0be5dd98.js.map"}